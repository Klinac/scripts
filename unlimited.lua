do local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local CoreGui=game:GetService("CoreGui");local ReplicatedStorage=game:GetService("ReplicatedStorage");local localPlayer=Players.LocalPlayer;local isKillauraOn=false;local attackRadius=10;local attackDelay=0.45;local isMultiTargetOn=false;local useKnockback=false;local isAutoTeleportingAway=false;local isExtraPunchesOn=false;local extraPunchCount=1;local currentTarget=nil;local attackCoroutine=nil;local teleportCoroutine=nil;local targetComboCounts={};local potentialTargets={};local lastTargetRefresh=0;local screenGui=Instance.new("ScreenGui");screenGui.Name="KillauraGui";screenGui.Parent=CoreGui;screenGui.ZIndexBehavior=Enum.ZIndexBehavior.Sibling;screenGui.ResetOnSpawn=false;local mainFrame=Instance.new("Frame");mainFrame.Name="MainFrame";mainFrame.Parent=screenGui;mainFrame.BackgroundColor3=Color3.fromRGB(35,35,45);mainFrame.BorderColor3=Color3.fromRGB(120,120,140);mainFrame.BorderSizePixel=2;mainFrame.Position=UDim2.new(0.5, -150,0.5, -205);mainFrame.Size=UDim2.new(0,300,0,410);mainFrame.AnchorPoint=Vector2.new(0.5,0.5);mainFrame.Draggable=true;mainFrame.Active=true;local titleLabel=Instance.new("TextLabel");titleLabel.Name="TitleLabel";titleLabel.Parent=mainFrame;titleLabel.BackgroundColor3=Color3.fromRGB(45,45,55);titleLabel.BorderColor3=Color3.fromRGB(120,120,140);titleLabel.BorderSizePixel=1;titleLabel.Size=UDim2.new(1,0,0,30);titleLabel.Font=Enum.Font.SourceSansBold;titleLabel.Text="Killaura";titleLabel.TextColor3=Color3.fromRGB(255,255,255);titleLabel.TextSize=18;local closeButton=Instance.new("TextButton");closeButton.Name="CloseButton";closeButton.Parent=mainFrame;closeButton.BackgroundColor3=Color3.fromRGB(200,50,50);closeButton.Position=UDim2.new(1, -25,0,5);closeButton.Size=UDim2.new(0,20,0,20);closeButton.Font=Enum.Font.SourceSansBold;closeButton.Text="X";closeButton.TextColor3=Color3.fromRGB(255,255,255);closeButton.ZIndex=2;local tabContainer=Instance.new("Frame");tabContainer.Name="TabContainer";tabContainer.Parent=mainFrame;tabContainer.BackgroundTransparency=1;tabContainer.Position=UDim2.new(0,0,0,30);tabContainer.Size=UDim2.new(1,0,0,25);local mainTabButton=Instance.new("TextButton");mainTabButton.Name="MainTabButton";mainTabButton.Parent=tabContainer;mainTabButton.BackgroundColor3=Color3.fromRGB(60,60,60);mainTabButton.Size=UDim2.new(0.5,0,1,0);mainTabButton.Font=Enum.Font.SourceSansBold;mainTabButton.Text="Main";mainTabButton.TextColor3=Color3.fromRGB(255,255,255);mainTabButton.TextSize=14;local experimentalTabButton=Instance.new("TextButton");experimentalTabButton.Name="ExperimentalTabButton";experimentalTabButton.Parent=tabContainer;experimentalTabButton.BackgroundColor3=Color3.fromRGB(40,40,40);experimentalTabButton.Position=UDim2.new(0.5,0,0,0);experimentalTabButton.Size=UDim2.new(0.5,0,1,0);experimentalTabButton.Font=Enum.Font.SourceSansBold;experimentalTabButton.Text="Experimental";experimentalTabButton.TextColor3=Color3.fromRGB(200,200,200);experimentalTabButton.TextSize=14;local mainTabFrame=Instance.new("Frame");mainTabFrame.Name="MainTabFrame";mainTabFrame.Parent=mainFrame;mainTabFrame.BackgroundTransparency=1;mainTabFrame.Position=UDim2.new(0,0,0,55);mainTabFrame.Size=UDim2.new(1,0,1, -55);mainTabFrame.Visible=true;local experimentalTabFrame=Instance.new("Frame");experimentalTabFrame.Name="ExperimentalTabFrame";experimentalTabFrame.Parent=mainFrame;experimentalTabFrame.BackgroundTransparency=1;experimentalTabFrame.Position=UDim2.new(0,0,0,55);experimentalTabFrame.Size=UDim2.new(1,0,1, -55);experimentalTabFrame.Visible=false;local toggleButton=Instance.new("TextButton");toggleButton.Name="ToggleButton";toggleButton.Parent=mainTabFrame;toggleButton.BackgroundColor3=Color3.fromRGB(180,0,0);toggleButton.Position=UDim2.new(0.5, -100,0,10);toggleButton.Size=UDim2.new(0,200,0,40);toggleButton.Font=Enum.Font.SourceSansBold;toggleButton.Text="Killaura: OFF";toggleButton.TextColor3=Color3.fromRGB(255,255,255);toggleButton.TextSize=20;local multiTargetButton=Instance.new("TextButton");multiTargetButton.Name="MultiTargetButton";multiTargetButton.Parent=mainTabFrame;multiTargetButton.BackgroundColor3=Color3.fromRGB(180,0,0);multiTargetButton.Position=UDim2.new(0.5, -100,0,60);multiTargetButton.Size=UDim2.new(0,200,0,30);multiTargetButton.Font=Enum.Font.SourceSansBold;multiTargetButton.Text="Multi-Target: OFF";multiTargetButton.TextColor3=Color3.fromRGB(255,255,255);multiTargetButton.TextSize=16;local knockbackButton=Instance.new("TextButton");knockbackButton.Name="KnockbackButton";knockbackButton.Parent=mainTabFrame;knockbackButton.BackgroundColor3=Color3.fromRGB(180,0,0);knockbackButton.Position=UDim2.new(0.5, -100,0,100);knockbackButton.Size=UDim2.new(0,200,0,30);knockbackButton.Font=Enum.Font.SourceSansBold;knockbackButton.Text="Use Knockback: OFF";knockbackButton.TextColor3=Color3.fromRGB(255,255,255);knockbackButton.TextSize=16;local autoTeleportButton=Instance.new("TextButton");autoTeleportButton.Name="AutoTeleportButton";autoTeleportButton.Parent=mainTabFrame;autoTeleportButton.BackgroundColor3=Color3.fromRGB(180,0,0);autoTeleportButton.Position=UDim2.new(0.5, -100,0,140);autoTeleportButton.Size=UDim2.new(0,200,0,30);autoTeleportButton.Font=Enum.Font.SourceSansBold;autoTeleportButton.Text="Auto-Teleport: OFF";autoTeleportButton.TextColor3=Color3.fromRGB(255,255,255);autoTeleportButton.TextSize=16;local radiusLabel=Instance.new("TextLabel");radiusLabel.Name="RadiusLabel";radiusLabel.Parent=mainTabFrame;radiusLabel.BackgroundTransparency=1;radiusLabel.Position=UDim2.new(0.5, -100,0,180);radiusLabel.Size=UDim2.new(0,200,0,20);radiusLabel.Font=Enum.Font.SourceSans;radiusLabel.Text="Radius: "   .. attackRadius   .. " studs" ;radiusLabel.TextColor3=Color3.fromRGB(220,220,220);radiusLabel.TextSize=16;local radiusSliderBackground=Instance.new("Frame");radiusSliderBackground.Name="RadiusSliderBackground";radiusSliderBackground.Parent=mainTabFrame;radiusSliderBackground.BackgroundColor3=Color3.fromRGB(25,25,30);radiusSliderBackground.Position=UDim2.new(0.5, -100,0,210);radiusSliderBackground.Size=UDim2.new(0,200,0,10);local radiusCorner=Instance.new("UICorner");radiusCorner.CornerRadius=UDim.new(0,5);radiusCorner.Parent=radiusSliderBackground;local radiusSliderHandle=Instance.new("TextButton");radiusSliderHandle.Name="RadiusSliderHandle";radiusSliderHandle.Parent=radiusSliderBackground;radiusSliderHandle.BackgroundColor3=Color3.fromRGB(100,120,220);radiusSliderHandle.Size=UDim2.new(0,20,0,20);radiusSliderHandle.AnchorPoint=Vector2.new(0.5,0.5);radiusSliderHandle.Position=UDim2.new((attackRadius-1)/19 ,0,0.5,0);radiusSliderHandle.ZIndex=2;local radiusHandleCorner=Instance.new("UICorner");radiusHandleCorner.CornerRadius=UDim.new(0,4);radiusHandleCorner.Parent=radiusSliderHandle;local speedLabel=Instance.new("TextLabel");speedLabel.Name="SpeedLabel";speedLabel.Parent=mainTabFrame;speedLabel.BackgroundTransparency=1;speedLabel.Position=UDim2.new(0.5, -100,0,240);speedLabel.Size=UDim2.new(0,200,0,20);speedLabel.Font=Enum.Font.SourceSans;speedLabel.Text="Attack Speed: "   .. string.format("%.2f",attackDelay)   .. "s" ;speedLabel.TextColor3=Color3.fromRGB(220,220,220);speedLabel.TextSize=16;local speedSliderBackground=Instance.new("Frame");speedSliderBackground.Name="SpeedSliderBackground";speedSliderBackground.Parent=mainTabFrame;speedSliderBackground.BackgroundColor3=Color3.fromRGB(25,25,30);speedSliderBackground.Position=UDim2.new(0.5, -100,0,270);speedSliderBackground.Size=UDim2.new(0,200,0,10);local speedCorner=Instance.new("UICorner");speedCorner.CornerRadius=UDim.new(0,5);speedCorner.Parent=speedSliderBackground;local speedSliderHandle=Instance.new("TextButton");speedSliderHandle.Name="SpeedSliderHandle";speedSliderHandle.Parent=speedSliderBackground;speedSliderHandle.BackgroundColor3=Color3.fromRGB(220,120,100);speedSliderHandle.Size=UDim2.new(0,20,0,20);speedSliderHandle.AnchorPoint=Vector2.new(0.5,0.5);speedSliderHandle.Position=UDim2.new(0,0,0.5,0);speedSliderHandle.ZIndex=2;local speedHandleCorner=Instance.new("UICorner");speedHandleCorner.CornerRadius=UDim.new(0,4);speedHandleCorner.Parent=speedSliderHandle;local targetLabel=Instance.new("TextLabel");targetLabel.Name="TargetLabel";targetLabel.Parent=mainTabFrame;targetLabel.BackgroundTransparency=1;targetLabel.Position=UDim2.new(0.5, -100,0,300);targetLabel.Size=UDim2.new(0,200,0,20);targetLabel.Font=Enum.Font.SourceSans;targetLabel.Text="Target: None";targetLabel.TextColor3=Color3.fromRGB(255,100,100);targetLabel.TextSize=16;local healthLabel=Instance.new("TextLabel");healthLabel.Name="HealthLabel";healthLabel.Parent=mainTabFrame;healthLabel.BackgroundTransparency=1;healthLabel.Position=UDim2.new(0.5, -100,0,320);healthLabel.Size=UDim2.new(0,200,0,20);healthLabel.Font=Enum.Font.SourceSans;healthLabel.Text="Health: N/A";healthLabel.TextColor3=Color3.fromRGB(100,255,100);healthLabel.TextSize=16;local comboLabel=Instance.new("TextLabel");comboLabel.Name="ComboLabel";comboLabel.Parent=mainTabFrame;comboLabel.BackgroundTransparency=1;comboLabel.Position=UDim2.new(0.5, -100,0,340);comboLabel.Size=UDim2.new(0,200,0,20);comboLabel.Font=Enum.Font.SourceSans;comboLabel.Text="Combo: 0";comboLabel.TextColor3=Color3.fromRGB(255,180,100);comboLabel.TextSize=16;local extraPunchesButton=Instance.new("TextButton");extraPunchesButton.Name="ExtraPunchesButton";extraPunchesButton.Parent=experimentalTabFrame;extraPunchesButton.BackgroundColor3=Color3.fromRGB(180,0,0);extraPunchesButton.Position=UDim2.new(0.5, -100,0,10);extraPunchesButton.Size=UDim2.new(0,200,0,30);extraPunchesButton.Font=Enum.Font.SourceSansBold;extraPunchesButton.Text="Extra Punches: OFF";extraPunchesButton.TextColor3=Color3.fromRGB(255,255,255);extraPunchesButton.TextSize=16;local extraPunchLabel=Instance.new("TextLabel");extraPunchLabel.Name="ExtraPunchLabel";extraPunchLabel.Parent=experimentalTabFrame;extraPunchLabel.BackgroundTransparency=1;extraPunchLabel.Position=UDim2.new(0.5, -100,0,50);extraPunchLabel.Size=UDim2.new(0,200,0,20);extraPunchLabel.Font=Enum.Font.SourceSans;extraPunchLabel.Text="Extra Punch Count: "   .. extraPunchCount ;extraPunchLabel.TextColor3=Color3.fromRGB(220,220,220);extraPunchLabel.TextSize=16;local extraPunchSliderBackground=Instance.new("Frame");extraPunchSliderBackground.Name="ExtraPunchSliderBackground";extraPunchSliderBackground.Parent=experimentalTabFrame;extraPunchSliderBackground.BackgroundColor3=Color3.fromRGB(25,25,30);extraPunchSliderBackground.Position=UDim2.new(0.5, -100,0,80);extraPunchSliderBackground.Size=UDim2.new(0,200,0,10);local extraPunchCorner=Instance.new("UICorner");extraPunchCorner.CornerRadius=UDim.new(0,5);extraPunchCorner.Parent=extraPunchSliderBackground;local extraPunchSliderHandle=Instance.new("TextButton");extraPunchSliderHandle.Name="ExtraPunchSliderHandle";extraPunchSliderHandle.Parent=extraPunchSliderBackground;extraPunchSliderHandle.BackgroundColor3=Color3.fromRGB(180,100,220);extraPunchSliderHandle.Size=UDim2.new(0,20,0,20);extraPunchSliderHandle.AnchorPoint=Vector2.new(0.5,0.5);extraPunchSliderHandle.Position=UDim2.new(0,0,0.5,0);extraPunchSliderHandle.ZIndex=2;local extraPunchHandleCorner=Instance.new("UICorner");extraPunchHandleCorner.CornerRadius=UDim.new(0,4);extraPunchHandleCorner.Parent=extraPunchSliderHandle;local radiusAdornment=Instance.new("CylinderHandleAdornment");radiusAdornment.Name="RadiusCircle";radiusAdornment.Adornee=localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") ;radiusAdornment.Height=0.1;radiusAdornment.Radius=attackRadius;radiusAdornment.Color3=Color3.fromRGB(100,120,220);radiusAdornment.Transparency=0.7;radiusAdornment.Visible=false;radiusAdornment.CFrame=CFrame.Angles(math.rad(90),0,0);radiusAdornment.Parent=CoreGui;local function refreshTargets() table.clear(potentialTargets);for _,model in ipairs(workspace:GetChildren()) do if (model:FindFirstChild("Attacker") and model:FindFirstChildOfClass("Humanoid")) then table.insert(potentialTargets,model);end end lastTargetRefresh=tick();end local function findClosestNPCFromList() local closestNpc=nil;local shortestDistance=attackRadius + 1 ;local localCharacter=localPlayer.Character;if ( not localCharacter or  not localCharacter:FindFirstChild("HumanoidRootPart")) then return nil;end local localRoot=localCharacter.HumanoidRootPart;for i= #potentialTargets,1, -1 do local model=potentialTargets[i];if ( not model or  not model.Parent) then table.remove(potentialTargets,i);continue;end local humanoid=model:FindFirstChildOfClass("Humanoid");local rootPart=model:FindFirstChild("HumanoidRootPart");if (humanoid and rootPart and (humanoid.Health>0)) then local distance=(localRoot.Position-rootPart.Position).Magnitude;if ((distance<=attackRadius) and (distance<shortestDistance)) then shortestDistance=distance;closestNpc=model;end else table.remove(potentialTargets,i);end end return closestNpc;end local function killauraLoop() local punchEvent=ReplicatedStorage:FindFirstChild("Punch");local knockbackEvent=ReplicatedStorage:FindFirstChild("Knockback");if  not punchEvent then warn("Killaura: Could not find 'Punch' RemoteEvent.");isKillauraOn=false;toggleButton.Text="Killaura: OFF (Error)";toggleButton.BackgroundColor3=Color3.fromRGB(255,0,0);radiusAdornment.Visible=false;return;end while isKillauraOn do local localCharacter=localPlayer.Character;if ( not localCharacter or  not localCharacter:FindFirstChild("HumanoidRootPart")) then task.wait(0.5);continue;end if ((tick() -lastTargetRefresh)>5) then refreshTargets();end if isMultiTargetOn then currentTarget=findClosestNPCFromList();elseif ( not currentTarget or  not currentTarget.Parent or  not currentTarget:FindFirstChildOfClass("Humanoid") or (currentTarget.Humanoid.Health<=0)) then currentTarget=findClosestNPCFromList();end if currentTarget then local targetHumanoid=currentTarget:FindFirstChildOfClass("Humanoid");if targetHumanoid then targetLabel.Text="Target: "   .. currentTarget.Name ;targetLabel.TextColor3=Color3.fromRGB(100,255,100);healthLabel.Text="Health: "   .. math.floor(targetHumanoid.Health) ;local cancellations=localCharacter:FindFirstChild("Cancellations");local cancellationValue=(cancellations and cancellations.Value) or 16 ;local punchCount=(isExtraPunchesOn and extraPunchCount) or 1 ;for i=1,punchCount do if ( not isKillauraOn or  not currentTarget or  not currentTarget.Parent or  not targetHumanoid or (targetHumanoid.Health<=0)) then break;end local currentCombo=targetComboCounts[targetHumanoid] or 1 ;currentCombo=currentCombo + 1 ;if (currentCombo>5) then currentCombo=2;end targetComboCounts[targetHumanoid]=currentCombo;comboLabel.Text="Combo: "   .. currentCombo ;punchEvent:FireServer(targetHumanoid,currentCombo,cancellationValue,nil,"DamageMultiplier: 1");if (useKnockback and knockbackEvent) then knockbackEvent:FireServer(currentTarget,2);end end end else targetLabel.Text="Target: None";healthLabel.Text="Health: N/A";comboLabel.Text="Combo: 0";end task.wait(attackDelay);end end local function autoTeleportLoop() while isAutoTeleportingAway and isKillauraOn  do local localCharacter=localPlayer.Character;if (currentTarget and localCharacter and localCharacter.PrimaryPart) then local localRootPart=localCharacter.PrimaryPart;local targetRootPart=currentTarget:FindFirstChild("HumanoidRootPart");if targetRootPart then local desiredDistance=math.max(5,attackRadius-2 );if ((localRootPart.Position-targetRootPart.Position).Magnitude<(desiredDistance-1)) then local directionAway=(localRootPart.Position-targetRootPart.Position).Unit;local newPosition=targetRootPart.Position + (directionAway * desiredDistance) ;localRootPart.CFrame=CFrame.new(newPosition,targetRootPart.Position);end end end RunService.Heartbeat:Wait();end end local function updateRadiusCircle() if (localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")) then radiusAdornment.Adornee=localPlayer.Character.HumanoidRootPart;end radiusAdornment.Radius=attackRadius;radiusAdornment.Visible=isKillauraOn;end local function setActiveTab(activeButton,activeFrame) mainTabButton.BackgroundColor3=Color3.fromRGB(40,40,40);experimentalTabButton.BackgroundColor3=Color3.fromRGB(40,40,40);mainTabButton.TextColor3=Color3.fromRGB(200,200,200);experimentalTabButton.TextColor3=Color3.fromRGB(200,200,200);mainTabFrame.Visible=false;experimentalTabFrame.Visible=false;activeButton.BackgroundColor3=Color3.fromRGB(60,60,60);activeButton.TextColor3=Color3.fromRGB(255,255,255);activeFrame.Visible=true;end mainTabButton.MouseButton1Click:Connect(function() setActiveTab(mainTabButton,mainTabFrame);end);experimentalTabButton.MouseButton1Click:Connect(function() setActiveTab(experimentalTabButton,experimentalTabFrame);end);toggleButton.MouseButton1Click:Connect(function() isKillauraOn= not isKillauraOn;if isKillauraOn then toggleButton.Text="Killaura: ON";toggleButton.BackgroundColor3=Color3.fromRGB(0,160,0);refreshTargets();attackCoroutine=task.spawn(killauraLoop);if isAutoTeleportingAway then if teleportCoroutine then task.cancel(teleportCoroutine);end teleportCoroutine=task.spawn(autoTeleportLoop);end else toggleButton.Text="Killaura: OFF";toggleButton.BackgroundColor3=Color3.fromRGB(180,0,0);if attackCoroutine then task.cancel(attackCoroutine);attackCoroutine=nil;end if teleportCoroutine then task.cancel(teleportCoroutine);teleportCoroutine=nil;end currentTarget=nil;targetLabel.Text="Target: None";healthLabel.Text="Health: N/A";comboLabel.Text="Combo: 0";end updateRadiusCircle();end);multiTargetButton.MouseButton1Click:Connect(function() isMultiTargetOn= not isMultiTargetOn;multiTargetButton.Text=(isMultiTargetOn and "Multi-Target: ON") or "Multi-Target: OFF" ;multiTargetButton.BackgroundColor3=(isMultiTargetOn and Color3.fromRGB(0,160,0)) or Color3.fromRGB(180,0,0) ;end);knockbackButton.MouseButton1Click:Connect(function() useKnockback= not useKnockback;knockbackButton.Text=(useKnockback and "Use Knockback: ON") or "Use Knockback: OFF" ;knockbackButton.BackgroundColor3=(useKnockback and Color3.fromRGB(0,160,0)) or Color3.fromRGB(180,0,0) ;end);autoTeleportButton.MouseButton1Click:Connect(function() isAutoTeleportingAway= not isAutoTeleportingAway;autoTeleportButton.Text=(isAutoTeleportingAway and "Auto-Teleport: ON") or "Auto-Teleport: OFF" ;autoTeleportButton.BackgroundColor3=(isAutoTeleportingAway and Color3.fromRGB(0,160,0)) or Color3.fromRGB(180,0,0) ;if (isAutoTeleportingAway and isKillauraOn) then if teleportCoroutine then task.cancel(teleportCoroutine);end teleportCoroutine=task.spawn(autoTeleportLoop);elseif teleportCoroutine then task.cancel(teleportCoroutine);teleportCoroutine=nil;end end);extraPunchesButton.MouseButton1Click:Connect(function() isExtraPunchesOn= not isExtraPunchesOn;extraPunchesButton.Text=(isExtraPunchesOn and "Extra Punches: ON") or "Extra Punches: OFF" ;extraPunchesButton.BackgroundColor3=(isExtraPunchesOn and Color3.fromRGB(0,160,0)) or Color3.fromRGB(180,0,0) ;end);closeButton.MouseButton1Click:Connect(function() if isKillauraOn then isKillauraOn=false;if attackCoroutine then task.cancel(attackCoroutine);attackCoroutine=nil;end if teleportCoroutine then task.cancel(teleportCoroutine);teleportCoroutine=nil;end end screenGui:Destroy();radiusAdornment:Destroy();end);local function updateRadiusSlider(input) local sliderWidth=radiusSliderBackground.AbsoluteSize.X;local mouseX=input.Position.X-radiusSliderBackground.AbsolutePosition.X ;local handleX=math.clamp(mouseX,0,sliderWidth);local percentage=handleX/sliderWidth ;attackRadius=math.floor(1 + (percentage * 19) );radiusSliderHandle.Position=UDim2.new(percentage,0,0.5,0);radiusLabel.Text="Radius: "   .. attackRadius   .. " studs" ;updateRadiusCircle();end local function updateSpeedSlider(input) local sliderWidth=speedSliderBackground.AbsoluteSize.X;local mouseX=input.Position.X-speedSliderBackground.AbsolutePosition.X ;local handleX=math.clamp(mouseX,0,sliderWidth);local percentage=handleX/sliderWidth ;attackDelay=0.45 + (percentage * 0.55) ;speedSliderHandle.Position=UDim2.new(percentage,0,0.5,0);speedLabel.Text="Attack Speed: "   .. string.format("%.2f",attackDelay)   .. "s" ;end local function updateExtraPunchSlider(input) local sliderWidth=extraPunchSliderBackground.AbsoluteSize.X;local mouseX=input.Position.X-extraPunchSliderBackground.AbsolutePosition.X ;local handleX=math.clamp(mouseX,0,sliderWidth);local percentage=handleX/sliderWidth ;extraPunchCount=math.floor(1 + (percentage * 4) );extraPunchSliderHandle.Position=UDim2.new(percentage,0,0.5,0);extraPunchLabel.Text="Extra Punch Count: "   .. extraPunchCount ;end radiusSliderHandle.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then local moveConnection,releaseConnection;moveConnection=UserInputService.InputChanged:Connect(function(moveInput) if ((moveInput.UserInputType==Enum.UserInputType.MouseMovement) or (moveInput.UserInputType==Enum.UserInputType.Touch)) then updateRadiusSlider(moveInput);end end);releaseConnection=UserInputService.InputEnded:Connect(function(releaseInput) if ((releaseInput.UserInputType==Enum.UserInputType.MouseButton1) or (releaseInput.UserInputType==Enum.UserInputType.Touch)) then moveConnection:Disconnect();releaseConnection:Disconnect();end end);end end);speedSliderHandle.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then local moveConnection,releaseConnection;moveConnection=UserInputService.InputChanged:Connect(function(moveInput) if ((moveInput.UserInputType==Enum.UserInputType.MouseMovement) or (moveInput.UserInputType==Enum.UserInputType.Touch)) then updateSpeedSlider(moveInput);end end);releaseConnection=UserInputService.InputEnded:Connect(function(releaseInput) if ((releaseInput.UserInputType==Enum.UserInputType.MouseButton1) or (releaseInput.UserInputType==Enum.UserInputType.Touch)) then moveConnection:Disconnect();releaseConnection:Disconnect();end end);end end);extraPunchSliderHandle.InputBegan:Connect(function(input) if ((input.UserInputType==Enum.UserInputType.MouseButton1) or (input.UserInputType==Enum.UserInputType.Touch)) then local moveConnection,releaseConnection;moveConnection=UserInputService.InputChanged:Connect(function(moveInput) if ((moveInput.UserInputType==Enum.UserInputType.MouseMovement) or (moveInput.UserInputType==Enum.UserInputType.Touch)) then updateExtraPunchSlider(moveInput);end end);releaseConnection=UserInputService.InputEnded:Connect(function(releaseInput) if ((releaseInput.UserInputType==Enum.UserInputType.MouseButton1) or (releaseInput.UserInputType==Enum.UserInputType.Touch)) then moveConnection:Disconnect();releaseConnection:Disconnect();end end);end end);localPlayer.CharacterAdded:Connect(function(character) character:WaitForChild("HumanoidRootPart");radiusAdornment.Adornee=character.HumanoidRootPart;end); end